schemaVersion: "0.3"
description: |
  ### Document name - ASR-EnableLoadBalancerLogging

  ## What does this document do?
  Enables appropriate Load Balancer Logging:
  

  ## Input Parameters
  * AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
  * ResourceId: (Required) The Resource ID
  * Region: (Required) Finding Region
  * Accountid: (Required) Account Id

  ## Output Parameters
  * Remediation.Output: STDOUT and messages from the remediation steps.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: '^arn:(?:aws|aws-us-gov|aws-cn):iam::\d{12}:role/[\w+=,.@-]+$'
  ResourceId:
    type: String
    description: The ARN of the resource
    allowedPattern: '(.*)$'
  Region:
    type: String
    description: The REGION of the resource
    allowedPattern: '^[a-zA-Z0-9]{2}-[a-z]{0,12}-[0-9]{1,2}$'
  AccountId:
    type: String
    description: The Account Id of the resource
    allowedPattern: '^[0-9]{12}$'
  ResourceType:
    type: String
    description: The Type of the resource (ie AwsElbv2LoadBalancer)
    allowedPattern: '^[a-zA-Z][a-zA-Z0-9-_:]{0,25}$'


outputs:
  - Remediation.Output

mainSteps:
- 
    name: CreateBucket
    action: 'aws:executeScript'
    outputs:
      - Name: Output
        Selector: $.Payload.response
        Type: StringMap
      - Name: LoggingBucket
        Selector: $.Payload.loggingBucketName
        Type: String
    inputs:
      InputPayload: 
        ResourceId: '{{ResourceId}}'
        Region: '{{Region}}'
        AccountId: '{{AccountId}}'
        ResourceType: '{{ResourceType}}'
      Runtime: python3.8
      Handler: runbook_handler
      Script: |-
        %%SCRIPT=CreateGenericLoggingBucket.py%%
    isEnd: false
- 
    name: Remediation
    action: 'aws:executeScript'
    outputs:
      - Name: Output
        Selector: $.Payload.response
        Type: StringMap
    inputs:
      InputPayload: 
        ResourceId: '{{ResourceId}}'
        Region: '{{Region}}'
        AccountId: '{{AccountId}}'
        ResourceType: '{{ResourceType}}'
        LoggingBucket: '{{CreateBucket.LoggingBucket}}'
      Runtime: python3.8
      Handler: runbook_handler
      Script: |-
        %%SCRIPT=ApplyGenericLogging.py%%
    isEnd: true